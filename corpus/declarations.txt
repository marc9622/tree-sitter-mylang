==============
Module declaration
==============

module collection;

pub module collection;

module collection {}

--------------

(source_file
    (module_declaration (identifier))

    (module_declaration (identifier))

    (module_declaration
        (identifier)
        (declaration_block))
)

==============
Module nested
==============

pub module collection {

    pub module list {
        pub module array;
        module list;
    }

    module tree {}
}

--------------

(source_file
    (module_declaration
        (identifier)
        (declaration_block

            (module_declaration
                (identifier)
                (declaration_block
                    (module_declaration (identifier))
                    (module_declaration (identifier))))

            (module_declaration
                (identifier)
                (declaration_block))))
)

==============
Variable value declaration
==============

var number := 10;

var string: Str = "Hello";

--------------

(source_file
    (variable_declaration
        (value_declaration
            (identifier)
            (number_literal)))

    (variable_declaration
        (value_declaration
            (identifier)
            (type)
            (string_literal)))
)

==============
Variable complex types
==============

var bool: *Bool = get_bool();

var thing: &Thing = allocator.alloc_thing();

var array: [10]Int = [10]Test.test();

--------------

(source_file
    (variable_declaration
        (value_declaration
            (identifier)
            (type (imut_ref_type (type)))
            (function_call
                (identifier)
                (parameter_list_use))))

    (variable_declaration
        (value_declaration
            (identifier)
            (type (mut_ref_type (type)))
            (function_call
                (dot_operation
                    (identifier)
                    (identifier))
                (parameter_list_use))))

    (variable_declaration
        (value_declaration
            (identifier)
            (type
                (array_type
                    (number_literal)
                    (type)))
            (function_call
                (dot_operation
                    (type
                        (array_type
                            (number_literal)
                            (type)))
                    (identifier))
                (parameter_list_use))))
                    
)
